---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import { getCollection, render } from "astro:content";
import SVGComponent from "../../components/SVGComponent.astro";

export async function getStaticPaths() {
    const works = await getCollection("work");
    return works.map((work) => ({
        params: { id: work.id },
        props: { work },
    }));
}

const { work } = Astro.props;
const { Content } = await render(work);
---

<Layout title={`${work.data.title} - Astrofolio`}>
    <article class="work__container">
        <div class="work__header">
            <a
                class="work__link"
                href="/astrofolio/works"
                aria-label="Back to works page">&larr; Works</a
            >
            <h1 class="work__title">{work.data.title}</h1>
            <p class="work__description">{work.data.description}</p>
            <div class="work__links">
                <a
                    class="work__live__site"
                    href={work.data.liveSite}
                    aria-label="Live site"
                    title="Live site"
                    target="_blank"
                >
                    <SVGComponent
                        name="eye"
                        width="30"
                        height="30"
                        type="icon"
                    />
                </a>
                <a
                    class="work__github__repo"
                    href={work.data.githubRepo}
                    aria-label="GitHub repository"
                    title="GitHub repository"
                    target="_blank"
                >
                    <SVGComponent
                        name="github"
                        width="30"
                        height="30"
                        type="icon"
                    />
                </a>
            </div>
        </div>
        <div class="work__cover">
            <Image
                class="work__image"
                src={work.data.image}
                alt={work.data.title}
                width="500"
                height="500"
                loading="eager"
                transition:name={`cover-${work.id}`}
            />
        </div>
        <div class="work__content">
            <Content />
        </div>
        <div class="work__technologies">
            <h2 class="work__technologies__title">Technologies used</h2>
            <ul class="work__technologies__list">
                {
                    work.data.techStack.map((technology) => (
                        <li class="work__technologies__list__item">
                            {technology}
                        </li>
                    ))
                }
            </ul>
        </div>
    </article>
</Layout>
<style>
    .work__header {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: center;
        gap: 1rem;
        border-bottom: 1px solid var(--fg-color);
        padding-bottom: 1rem;
        margin-bottom: 3rem;

        @media (width <= 768px) {
            align-items: center;
        }
    }

    .work__title {
        font-size: 4rem;
        font-weight: 900;

        @media (width <= 768px) {
            font-size: clamp(2rem, 10vw, 3.5rem);
        }
    }

    .work__description {
        font-size: 1.5rem;

        @media (width <= 768px) {
            font-size: clamp(1rem, 3vw, 1.25rem);
        }

    }

    .work__link {
        color: var(--fg-color) !important;

        & > * {
            transition: all 0.3s ease-in-out;
        }
    }

    .work__links {
        display: flex;
        gap: 1rem;

        & > * {
            text-decoration: none;
            color: #eee;
            line-height: 1rem;
        }
    }

    .work__cover {
        padding-bottom: 3rem;
        text-align: center;
    }

    .work__image {
        width: 70%;
        height: auto;
        aspect-ratio: 16/9;
        object-fit: cover;
        transition: all 0.3s ease-in-out;
        border-radius: 1.5rem;

        @media (width <= 768px) {
            width: 100%;
        }
    }

    .work__live__site {
        padding: 0.5rem;
        border-radius: 0.5rem;
        background-color: #44f;
        transition: all 0.3s ease-in-out;

        &:hover {
            background-color: #88f;
            transform: scale(1.1);
            box-shadow: 0 0 10px #88f;
        }
    }

    .work__github__repo {
        padding: 0.5rem;
        border-radius: 0.5rem;
        background-color: #111;
        transition: all 0.3s ease-in-out;

        &:hover {
            background-color: #88f;
            transform: scale(1.1);
            box-shadow: 0 0 10px #88f;
        }
    }

    .work__content {
        font-size: 1.25rem;
        margin-bottom: 3rem;
        border-bottom: 1px solid var(--fg-color);

        @media (width <= 768px) {
            font-size: 1rem;
        }
    }

    .work__technologies {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 2rem;
    }

    .work__technologies__title {
        font-size: 2.5rem;
        text-align: center;

        @media (width <= 768px) {
            font-size: clamp(1rem, 8vw, 2rem);
        }
    }

    .work__technologies__list {
        list-style-type: none;
        padding: 0;
        display: flex;
        align-items: center;
        align-self: center;
        justify-content: flex-start;
        gap: 2rem;
        user-select: none;

        @media (width <= 768px) {
            flex-wrap: wrap;
            justify-content: center;
        }
    }

    .work__technologies__list__item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.1rem;
        font-weight: bold;
        background-color: #55a;
        padding: 0.5rem 1rem;
        border-radius: 1rem;
        color: #eee;

        @media (width <= 768px) {
            font-size: clamp(0.8rem, 3vw, 1rem);
        }
    }
</style>
